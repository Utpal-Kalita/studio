// src/ai/flows/generate-empathetic-response.ts
'use server';

/**
 * @fileOverview AI chat companion that generates empathetic responses.
 *
 * - generateEmpatheticResponse - A function that generates empathetic responses.
 * - GenerateEmpatheticResponseInput - The input type for the generateEmpatheticResponse function.
 * - GenerateEmpatheticResponseOutput - The return type for the generateEmpatheticResponse function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateEmpatheticResponseInputSchema = z.object({
  userInput: z.string().describe('The user input to respond to.'),
});
export type GenerateEmpatheticResponseInput = z.infer<typeof GenerateEmpatheticResponseInputSchema>;

const GenerateEmpatheticResponseOutputSchema = z.object({
  response: z.string().describe('The empathetic response generated by the AI.'),
});
export type GenerateEmpatheticResponseOutput = z.infer<typeof GenerateEmpatheticResponseOutputSchema>;

export async function generateEmpatheticResponse(
  input: GenerateEmpatheticResponseInput
): Promise<GenerateEmpatheticResponseOutput> {
  return generateEmpatheticResponseFlow(input);
}

const empatheticResponsePrompt = ai.definePrompt({
  name: 'empatheticResponsePrompt',
  input: {schema: GenerateEmpatheticResponseInputSchema},
  output: {schema: GenerateEmpatheticResponseOutputSchema},
  prompt: `You are an AI chat companion designed to provide empathetic responses to user input.

  Your goal is to validate the user's feelings and encourage them to share more.
  Avoid giving advice or diagnosis.
  Focus on supportive conversation and active listening.

  Here are some example phrases to use:
  - "I'm here for you"
  - "That sounds tough"
  - "Tell me more"
  - "That makes sense"
  - "I understand"

  User Input: {{{userInput}}}

  Empathetic Response:`,
});

const generateEmpatheticResponseFlow = ai.defineFlow(
  {
    name: 'generateEmpatheticResponseFlow',
    inputSchema: GenerateEmpatheticResponseInputSchema,
    outputSchema: GenerateEmpatheticResponseOutputSchema,
  },
  async input => {
    const {output} = await empatheticResponsePrompt(input);
    return output!;
  }
);
